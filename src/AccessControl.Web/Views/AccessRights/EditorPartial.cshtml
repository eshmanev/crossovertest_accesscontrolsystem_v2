@using AccessControl.Web.Models.Validation
@model AccessControl.Web.Models.AccessRights.AccessRightsIndexViewModel

@using (Html.BeginForm("Index", "AccessRights", new {ViewBag.ReturnUrl}, FormMethod.Post, new {@class = "form-inline", role = "form"}))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new {@class = "text-danger"})

    <fieldset>
        <legend>Allow access to user/group</legend>
        <div>
            <div class="form-group">
                <label class="control-label">Access Point:</label>
                @Html.DropDownListFor(x => x.Editor.AccessPointId, new SelectList(Model.Editor.AccessPoints, "AccessPointId", "Name"), RequiredSelect.Empty, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Editor.AccessPointId, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <label class="control-label">User:</label>
                @Html.DropDownListFor(x => x.Editor.UserName, new SelectList(Model.Editor.Users, "UserName", "DisplayName"), RequiredSelect.Empty, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Editor.UserName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <label class="control-label">User Group:</label>
                @Html.DropDownListFor(x => x.Editor.UserGroupName, new SelectList(Model.Editor.UserGroups, "Name", "DisplayName"), RequiredSelect.Empty, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Editor.UserGroupName, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div>
            <button class="btn btn-default">Apply</button>
        </div>
    </fieldset>
}